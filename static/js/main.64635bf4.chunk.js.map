{"version":3,"sources":["logo.png","components/card.js","components/search.js","components/Info.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","props","useEffect","fetchHero","useState","images","appearance","hero","sethero","a","fetch","id","data","json","className","src","sm","alt","name","gender","race","Search","Searchfun","e","persist","console","log","target","value","cb","logo","type","placeholder","onChange","heshe","hisher","Info","powerstats","connections","biography","alterEgos","height","weight","match","params","style","color","firstAppearance","alignment","fullName","groupAffiliation","htmlFor","durability","max","intelligence","power","combat","speed","strength","App","fetchHeros","isSearch","setisSearch","isInfo","setisInfo","input","setinput","heros","setheros","update","crbool","updateinfo","map","to","onClick","herofils","filter","String","toUpperCase","indexOf","path","render","cps","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.64635bf4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3970d2f8.png\";","import React, {useState, useEffect} from 'react'\r\n\r\nfunction Card(props) {\r\n    useEffect(() => {\r\n        fetchHero();\r\n      })\r\n      const [hero, sethero] = useState({\r\n          images:{},\r\n          appearance:{},\r\n      });\r\n      const fetchHero = async () => {\r\n          const data = await fetch(`https://akabab.github.io/superhero-api/api/id/${props.id}.json`);\r\n          const hero = await data.json();\r\n          sethero(hero)\r\n        }\r\n     \r\n     \r\n    return (\r\n            <div className=\"card\">\r\n               <img src={hero.images.sm} alt=\"\"/>\r\n                <h1>{hero.name}</h1>\r\n                <h2>{hero.appearance.gender}</h2>\r\n                <h2>{hero.appearance.race}</h2>\r\n\r\n\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport logo from '../logo.png'\r\n\r\nfunction Search(props) {\r\n    const Searchfun = async (e) =>{\r\n        e.persist()\r\n        console.log(e.target.value)        \r\n        props.cb(true,e.target.value)}\r\n    \r\n    return (\r\n        <div className='search'>\r\n            <img src={logo} alt=\"\" ></img>\r\n            <input type=\"text\" placeholder='Search Bar' onChange={Searchfun} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nvar heshe = \"she\";\r\nvar hisher = \"her\";\r\nfunction Info(props) {\r\n  useEffect(() => {\r\n    fetchHero();\r\n  });\r\n  const [hero, sethero] = useState({\r\n    images: {},\r\n    powerstats: {},\r\n    connections: {},\r\n    biography: {\r\n      alterEgos: [],\r\n    },\r\n    appearance: {\r\n      height: [],\r\n      weight: [],\r\n    },\r\n  });\r\n  const fetchHero = async () => {\r\n    const data = await fetch(\r\n      `https://akabab.github.io/superhero-api/api/id/${props.match.params.id}.json`\r\n    );\r\n    const hero = await data.json();\r\n    sethero(hero);\r\n    if (hero.appearance.gender === \"Male\") {\r\n      heshe = \"he\";\r\n      hisher = \"his\";\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"header\">\r\n        <img src={hero.images.sm} alt=\"\" />\r\n        <div>\r\n          <h1>{hero.name}</h1>\r\n          <p>\r\n            {heshe} made {hisher} first appearace on{\" \"}\r\n            <i style={{ color: \"white\" }}>{hero.biography.firstAppearance}</i>{\" \"}\r\n            as a {hero.biography.alignment} character<br></br>\r\n            {hisher} full name was {hero.biography.fullName} and is a part of{\" \"}\r\n            {hero.connections.groupAffiliation}​{\" \"}\r\n          </p>\r\n        </div>\r\n        <span className='block'>\r\n\r\n        </span>\r\n      </div>\r\n      <div className=\"content\">\r\n        <table className='powerstats'>\r\n          <tr>\r\n            <td>\r\n              <label htmlFor=\"durability\">Durability :</label>\r\n            </td>\r\n            <td>\r\n              <progress\r\n                id=\"durability\"\r\n                value={hero.powerstats.durability}\r\n                max=\"100\"\r\n              ></progress>\r\n              <br></br>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <label htmlFor=\"intelligence\">Intelligence :</label>\r\n            </td>\r\n            <td>\r\n              <progress\r\n                id=\"intelligence\"\r\n                value={hero.powerstats.intelligence}\r\n                max=\"100\"\r\n              >\r\n                {\" \"}\r\n              </progress>\r\n              <br></br>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>\r\n              <label htmlFor=\"power\">Power</label>\r\n            </td>\r\n            <td>\r\n              <progress id=\"power\" value={hero.powerstats.power} max=\"100\">\r\n                {\" \"}\r\n              </progress>\r\n              <br></br>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <label htmlFor=\"combat\">combat :</label>\r\n            </td>\r\n            <td>\r\n              <progress id=\"combat\" value={hero.powerstats.combat} max=\"100\">\r\n                {\" \"}\r\n              </progress>\r\n              <br></br>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <label htmlFor=\"speed\">Speed :</label>\r\n            </td>\r\n            <td>\r\n              <progress id=\"speed\" value={hero.powerstats.speed} max=\"100\">\r\n                {\" \"}\r\n              </progress>\r\n              <br></br>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <label htmlFor=\"strength\">Strength :</label>\r\n            </td>\r\n            <td>\r\n              <progress\r\n                id=\"strength\"\r\n                value={hero.powerstats.strength}\r\n                max=\"100\"\r\n              >\r\n                {\" \"}\r\n              </progress>\r\n              <br></br>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n      <div className=\"footer\">\r\n        Made with ❤️ by Mohan\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Info;\r\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport {BrowserRouter as Router,Switch,Route,Link} from 'react-router-dom'\n\n/* **********************  Importing Components ******************* */\nimport Card from './components/card'\nimport Search from './components/search'\nimport Info from './components/Info'\n\n\n/* **********************  Importing Components  (end) ******************* */\n\n\nfunction App() {\n  useEffect(() => {\n    fetchHeros();\n  },[])\n  const [isSearch,setisSearch] = useState(false);\n  const [isInfo,setisInfo] = useState(0);\n  const [input,setinput] = useState('');\n  const [heros, setheros] = useState([]);\n  const fetchHeros = async () => {\n      const data = await fetch(\"https://akabab.github.io/superhero-api/api/all.json\");\n      const heros = await data.json();\n      setheros(heros)\n    }\n  const update = (crbool,input) => {\n    setisSearch(crbool)\n    setinput(input)\n  }\n  const updateinfo = () => {\n    setisInfo(isInfo+1)\n  }\n \n\n  \n  \n  if(isInfo=== 0){\n \n  \n  if(!isSearch){\n  return (\n  \n    <div className=\"app\">\n         \n      <Search cb={update} />\n      <Router>\n      {heros.map(hero =>{\n     return (<Link to={`/info/${hero.id}`} onClick={updateinfo} ><Card id={hero.id} /></Link>)\n     \n   \n\n  })}</Router>\n\n   \n      \n    </div>\n\n  );}\n  if(isSearch){\n    const herofils = heros.filter( hero => {\n      let heroname = String(hero.name).toUpperCase()\n      return heroname.indexOf(input.toUpperCase()) > -1 \n    })\n    return (\n    \n      <div className=\"app\">\n        <Search cb={update} />\n        <Router>\n        {herofils.map(hero =>(\n        <Link to={`/info/${hero.id}`} onClick={updateinfo} ><Card id={hero.id} /></Link>\n  \n        ))}</Router>\n     \n        \n      </div>\n    );\n  }\n}\nif(isInfo === 1){\n  console.log(isInfo)\n  return (\n    <Router>\n    <Switch>\n    <Route path='/info/:id' render={(props) => <Info {...props} cps={updateinfo} />} />\n    </Switch>\n     </Router>\n  )\n}\n\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}